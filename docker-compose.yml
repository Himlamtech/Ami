services:
  redis:
    image: redis:7-alpine
    container_name: ami_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ami_network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: ami_qdrant
    environment:
      - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY:-himlam}
      - QDRANT__SERVICE__ENABLE_TLS=false
    ports:
      - "${QDRANT_PORT:-6333}:6333"
      - "${QDRANT_GRPC_PORT:-6334}:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:6333/healthz" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ami_network

  mongodb:
    image: mongo:7
    container_name: ami_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-admin_password}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-ami_db}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ami_network

volumes:
  redis_data:
    driver: local
  qdrant_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  ami_network:
    driver: bridge
