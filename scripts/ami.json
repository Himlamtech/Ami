{
	"info": {
		"_postman_id": "ami-rag-api-collection",
		"name": "AMI RAG API",
		"description": "Comprehensive RAG System API with multiple LLM providers, vector stores, and advanced features.\n\n## Features\n- Multiple LLM providers (OpenAI, Gemini, Anthropic Claude)\n- Multiple embedding providers (OpenAI, HuggingFace)\n- Vector stores (pgvector, ChromaDB)\n- Document ingestion and search\n- RAG queries with caching\n- Streaming responses\n- Collection management\n\n## Base URL\n`http://localhost:8000`",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Config & Health",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/config/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"config",
								"health"
							]
						},
						"description": "Check API health and database connections.\n\nReturns:\n- Database status (PostgreSQL, Redis, ChromaDB)\n- Provider availability\n- Overall health status"
					},
					"response": []
				},
				{
					"name": "List Available Models",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/config/models",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"config",
								"models"
							]
						},
						"description": "List all available LLM, embedding, and vector store models with their availability status."
					},
					"response": []
				},
				{
					"name": "Get Providers Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/config/providers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"config",
								"providers"
							]
						},
						"description": "Get detailed provider status and default configurations."
					},
					"response": []
				}
			]
		},
		{
			"name": "Generate (RAG Queries)",
			"item": [
				{
					"name": "Chat with RAG (OpenAI)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Học viện PTIT là gì? Có những cơ sở đào tạo nào?\"\n    }\n  ],\n  \"model\": \"openai\",\n  \"thinking_mode\": \"disabled\",\n  \"rag_config\": {\n    \"enabled\": true,\n    \"top_k\": 5,\n    \"similarity_threshold\": 0.7,\n    \"include_sources\": true\n  },\n  \"generation_config\": {\n    \"temperature\": 0.7,\n    \"max_tokens\": 1000\n  },\n  \"collection\": \"ptit_knowledge\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/generate/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"generate",
								"chat"
							]
						},
						"description": "Generate chat response with RAG using OpenAI.\n\nFeatures:\n- RAG-enabled with context retrieval\n- Adjustable similarity threshold\n- Source citation\n- Temperature control"
					},
					"response": []
				},
				{
					"name": "Chat with RAG (Anthropic Claude)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Cho tôi biết về lịch sử và truyền thống của Học viện PTIT.\"\n    }\n  ],\n  \"model\": \"anthropic\",\n  \"thinking_mode\": \"chain_of_thought\",\n  \"system_prompt\": \"Bạn là trợ lý AI chuyên về Học viện Công nghệ Bưu chính Viễn thông (PTIT). Hãy trả lời một cách chi tiết và chính xác.\",\n  \"rag_config\": {\n    \"enabled\": true,\n    \"top_k\": 7,\n    \"similarity_threshold\": 0.6,\n    \"include_sources\": true\n  },\n  \"generation_config\": {\n    \"temperature\": 0.8,\n    \"max_tokens\": 2000\n  },\n  \"collection\": \"ptit_knowledge\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/generate/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"generate",
								"chat"
							]
						},
						"description": "Generate chat response using Anthropic Claude with chain-of-thought reasoning."
					},
					"response": []
				},
				{
					"name": "Chat with RAG (Gemini)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Các ngành đào tạo tại PTIT là gì?\"\n    }\n  ],\n  \"model\": \"gemini\",\n  \"rag_config\": {\n    \"enabled\": true,\n    \"top_k\": 5,\n    \"include_sources\": true\n  },\n  \"generation_config\": {\n    \"temperature\": 0.7\n  },\n  \"collection\": \"ptit_knowledge\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/generate/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"generate",
								"chat"
							]
						},
						"description": "Generate chat response using Google Gemini."
					},
					"response": []
				},
				{
					"name": "Chat WITHOUT RAG (Direct LLM)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Hello, how are you?\"\n    }\n  ],\n  \"model\": \"openai\",\n  \"rag_config\": {\n    \"enabled\": false\n  },\n  \"generation_config\": {\n    \"temperature\": 0.9,\n    \"max_tokens\": 500\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/generate/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"generate",
								"chat"
							]
						},
						"description": "Generate response without RAG (direct LLM call)."
					},
					"response": []
				},
				{
					"name": "Streaming Chat (SSE)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Giới thiệu chi tiết về Học viện PTIT\"\n    }\n  ],\n  \"model\": \"openai\",\n  \"stream\": true,\n  \"rag_config\": {\n    \"enabled\": true,\n    \"top_k\": 5\n  },\n  \"generation_config\": {\n    \"temperature\": 0.7\n  },\n  \"collection\": \"ptit_knowledge\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/generate/stream",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"generate",
								"stream"
							]
						},
						"description": "Stream chat response in real-time using Server-Sent Events (SSE) format.\n\nNote: Postman may not display SSE properly. Use curl or a custom client:\n```bash\ncurl -X POST http://localhost:8000/api/v1/generate/stream \\\n  -H \"Content-Type: application/json\" \\\n  -d '{...}' \\\n  --no-buffer\n```"
					},
					"response": []
				}
			]
		},
		{
			"name": "Vector Database",
			"item": [
				{
					"name": "Upload Document (Text)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"Học viện Công nghệ Bưu chính Viễn thông (PTIT) là một trường đại học hàng đầu trong lĩnh vực công nghệ thông tin và viễn thông tại Việt Nam. Học viện được thành lập vào năm 1997 và có trụ sở chính tại Hà Nội.\",\n  \"collection\": \"ptit_knowledge\",\n  \"metadata\": {\n    \"title\": \"Giới thiệu về PTIT\",\n    \"source\": \"Manual Entry\",\n    \"category\": \"general\"\n  },\n  \"chunk_config\": {\n    \"chunk_size\": 512,\n    \"chunk_overlap\": 50,\n    \"strategy\": \"fixed\"\n  },\n  \"embedding_provider\": \"openai\",\n  \"vector_store\": \"pgvector\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/vectordb/upload",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"vectordb",
								"upload"
							]
						},
						"description": "Upload text content to vector database.\n\nFeatures:\n- Automatic chunking with configurable strategy\n- Embedding generation\n- Collection organization\n- Custom metadata"
					},
					"response": []
				},
				{
					"name": "Upload Document (File)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "collection",
									"value": "ptit_knowledge",
									"type": "text"
								},
								{
									"key": "chunk_size",
									"value": "512",
									"type": "text"
								},
								{
									"key": "chunk_overlap",
									"value": "50",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/vectordb/upload/file",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"vectordb",
								"upload",
								"file"
							]
						},
						"description": "Upload file directly to vector database.\n\nSupported formats:\n- Markdown (.md)\n- PDF (.pdf)\n- Word documents (.docx)\n- Text files (.txt)"
					},
					"response": []
				},
				{
					"name": "Search Vector Database",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"Học viện PTIT có những cơ sở đào tạo nào?\",\n  \"collection\": \"ptit_knowledge\",\n  \"top_k\": 5,\n  \"similarity_threshold\": 0.7,\n  \"metadata_filter\": {\n    \"source\": \"Website Học viện\"\n  },\n  \"embedding_provider\": \"openai\",\n  \"vector_store\": \"pgvector\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/vectordb/search",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"vectordb",
								"search"
							]
						},
						"description": "Search for similar documents in vector database.\n\nFeatures:\n- Semantic similarity search\n- Collection filtering\n- Metadata filtering\n- Adjustable similarity threshold"
					},
					"response": []
				},
				{
					"name": "List Collections",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/vectordb/collections?vector_store=pgvector",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"vectordb",
								"collections"
							],
							"query": [
								{
									"key": "vector_store",
									"value": "pgvector"
								}
							]
						},
						"description": "List all available collections in vector database."
					},
					"response": []
				},
				{
					"name": "Get Database Stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/vectordb/stats?collection=ptit_knowledge&vector_store=pgvector",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"vectordb",
								"stats"
							],
							"query": [
								{
									"key": "collection",
									"value": "ptit_knowledge"
								},
								{
									"key": "vector_store",
									"value": "pgvector"
								}
							]
						},
						"description": "Get statistics about stored documents and chunks.\n\nReturns:\n- Total documents\n- Total chunks\n- Collection list"
					},
					"response": []
				},
				{
					"name": "Delete Document",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/vectordb/:doc_id?vector_store=pgvector",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"vectordb",
								":doc_id"
							],
							"query": [
								{
									"key": "vector_store",
									"value": "pgvector"
								}
							],
							"variable": [
								{
									"key": "doc_id",
									"value": "1",
									"description": "Document or chunk ID to delete"
								}
							]
						},
						"description": "Delete document by ID from vector database."
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}